  <div class="top">
    <h1>New York City Subway Investigation</h1>
  </div>
  <div class="buttons">
    <div class="line-buttons" id="seven">7</div>
    <div class="line-buttons" id="one">1</div>
    <div class="line-buttons" id="two">2</div>
    <div class="line-buttons" id="three">3</div>
    <div class="line-buttons" id="four">4</div>
    <div class="line-buttons" id="five">5</div>
    <div class="line-buttons" id="six">6</div>
    <div class="line-buttons" id="a">A</div>
    <div class="line-buttons" id="c">C</div>
    <div class="line-buttons" id="e">E</div>
    <div class="line-buttons" id="j">J</div>
    <div class="line-buttons" id="z">Z</div>
    <div class="line-buttons" id="b">B</div>
    <div class="line-buttons" id="d">D</div>
    <div class="line-buttons" id="f">F</div>
    <div class="line-buttons" id="m">M</div>
    <div class="line-buttons" id="n">N</div>
    <div class="line-buttons" id="q">Q</div>
    <div class="line-buttons" id="r">R</div>
    <div class="line-buttons" id="g">G</div>
    <div class="line-buttons" id="l">L</div>
    <div class="line-buttons" id="s42">S</div>
    <div class="line-buttons" id="sFkln">S</div>
    <div class="line-buttons" id="sRock">S</div>
  </div>
  <div class="svg-chart">
  <div id="tooltip" class="hidden">
    <p><span id="index">month</span></p>
    <p><span id="value">100</span>%</p>
  </div>
  </div>
  <script type="text/javascript">

    //Width and height
    var w = 900;
    var h = 500;
    var padding = 40;

    // Appends svg element
    var svg = d3.select(".svg-chart")
          .append("svg")
          .attr("width", w)
          .attr("height", h)
          .attr("class", "the-graph");

    // Here are some datasets
    var dataset = [];

    var nTrain = [78.8, 79.0, 79.3, 79.4, 80.0, 80.4, 80.6, 81.4, 82.1, 81.8, 82.2, 82.0, 82.2, 82.4, 82.6, 82.7, 81.9, 81.4, 81.2, 80.4, 79.3, 78.8, 78.8, 78.3, 77.5, 77.0, 76.3, 76.1, 76.1, 76.2, 75.9, 77.0, 76.8, 77.6, 77.5, 77.8, 78.1, 78.0, 78.4, 78.5, 79.0, 78.6, 78.7, 79.0, 79.4, 79.5, 78.9, 78.3, 78.4, 78.1, 78.5, 79.1, 79.1, 79.4];

    var qTrain = [81.8, 82.3, 82.2, 82.5, 83.0, 82.8, 83.1, 83.0, 82.9, 82.9, 83.3, 82.8, 82.8, 82.2, 82.2, 82.1, 81.6, 81.6, 81.4, 81.0, 80.1, 79.6, 79.0, 79.1, 78.8, 78.6, 78.3, 77.9, 77.9, 77.6, 77.9, 79.0, 78.7, 78.5, 79.1, 78.8, 78.3, 78.4, 78.6, 79.0, 79.3, 79.5, 79.6, 79.1, 79.3, 79.8, 80.0, 80.1, 80.2, 80.3, 80.6, 80.3, 79.8, 79.4];

    var rTrain = [75.7, 76.1, 76.5, 76.5, 76.7, 76.6, 76.7, 76.7, 76.9, 77.5, 78.1, 78.0, 78.0, 77.8, 77.6, 77.7, 77.8, 78.1, 78.0, 78.2, 78.6, 78.2, 78.3, 78.3, 78.0, 78.1, 78.6, 78.6, 78.5, 77.7, 78.4, 78.6, 78.0, 78.2, 77.5, 77.2, 77.6, 77.7, 77.6, 77.2, 77.2, 77.6, 77.4, 77.2, 77.0, 76.7, 77.4, 77.8, 77.7, 77.4, 77.1, 78.1, 77.4, 77.7];

    var sevenTrain = [74.5, 74.4, 74.4, 74.3, 74.8, 74.9, 74.9, 76.1, 75.8, 75.8, 76.1, 76.1, 76.1, 76.2, 75.7, 75.6, 75.4, 74.6, 74.4, 74.2, 74.1, 74.1, 74.2, 74.1, 74.3, 74.4, 74.7, 75.0, 74.9, 75.9, 76.2, 76.2, 76.0, 76.3, 76.0, 76.8, 75.8, 76.1, 76.1, 76.3, 76.5, 76.5, 76.3, 76.6, 77.4, 78.0, 78.3, 77.7, 79.3, 79.2, 79.4, 79.2, 78.8, 79.2];

    var oneTrain = [73.1, 73.1, 73.0, 73.9, 74.1, 74.2, 74.4, 75.2, 75.6, 75.5, 76.0, 76.3, 76.5, 77.1, 77.1, 76.9, 76.9, 77.3, 75.3, 75.6, 74.6, 75.0, 73.9, 70.2, 75.9, 77.3, 78.3, 78.6, 78.1, 77.4, 77.3, 79.5, 77.6, 79.8, 79.6, 79.3, 78.9, 80.2, 80.6, 79.1, 84.4, 83.6, 83.8, 86.1, 85.4, 84.9, 82.1, 82.7, 83.9, 81.9, 81.8, 83, 82.9, 83.3];

    var twoTrain = [71.8, 71.9, 72.3, 72.8, 72.9, 72.2, 73.2, 73.5, 73.9, 74.2, 74.3, 74.3, 74.2, 73.9, 74.1, 73.9, 74.4, 74.3, 71.8, 71.7, 72.4, 70.6, 71.7, 66.1, 69.6, 71.9, 72.4, 73.8, 69.2, 72.7, 71.7, 73.5, 71.3, 72.6, 73.6, 72.6, 71.4, 73.3, 74.1, 72.7, 74.2, 73.8, 74.7, 72.9, 73.4, 74.5, 74.0, 74.3, 74.9, 72.7, 74.7, 75.2, 71.9, 72.7];

    var threeTrain = [74.3, 74.8, 75.4, 76.1, 76.0, 76.0, 76.6, 76.4, 76.9, 77.6, 77.5, 77.2, 77.8, 78.2, 77.8, 77.7, 77.6, 77.9, 77.1, 77.1, 76.0, 76.4, 77.7, 72.4, 75.1, 76.3, 76.1, 77.1, 75.9, 76.4, 76.5, 77.0, 75.6, 75.9, 77.4, 75.4, 75.4, 77.1, 78.4, 76.4, 77.0, 77.7, 78.7, 76.9, 76.8, 77.6, 78.3, 75.7, 79.9, 76.4, 77.8, 77.8, 76.8, 78.3];

    var fourTrain = [68.4, 68.3, 67.9, 68.3, 68.7, 68.8, 69.0, 69.5, 70.1, 70.6, 70.9, 71.4, 72.0, 72.8, 74.0, 74.5, 75.1, 74.6, 72.7, 73.4, 74.4, 72.2, 73.7, 67.9, 70.1, 72.0, 72.9, 72.2, 72.7, 72.7, 73.0, 73.5, 72.7, 70.8, 73.7, 72.0, 73.0, 72.7, 74.5, 72.9, 75.7, 74.7, 75.6, 76.2, 74.6, 73.1, 75.2, 71.8, 73.8, 73.7, 74.9, 75, 74.1, 75.1];

    var fiveTrain = [70.6, 70.4, 70.4, 70.6, 70.5, 70.9, 72.2, 72.1, 71.8, 71.3, 71.6, 71.6, 71.0, 71.6, 71.9, 71.7, 72.4, 72.2, 72.0, 71.9, 71.9, 69.1, 71.9, 65.5, 67.2, 71.5, 71.4, 70.3, 66.2, 70.3, 71.9, 70.6, 71.1, 69.3, 72.0, 70.8, 70.9, 73.5, 74.3, 71.8, 73.1, 73.5, 73.7, 72.4, 72.7, 71.0, 72.5, 69.8, 71.1, 70.8, 72.3, 71.6, 71.0, 71.2];

    var sixTrain = [71.4, 71.7, 72.1, 72.5, 73.1, 72.9, 73.0, 73.2, 74.0, 74.1, 73.3, 73.0, 73.2, 73.1, 73.2, 73.4, 73.2, 73.5, 73.3, 74.6, 75.5, 74.4, 78.5, 71.7, 65.8, 74.4, 76.9, 75.5, 77.6, 74.4, 74.2, 74.5, 78.9, 74.7, 76.7, 75.8, 74.9, 75.4, 76.1, 76.1, 80.5, 80.9, 78.5, 81.5, 81.8, 79.0, 80.5, 74.7, 73.9, 76.2, 78.3, 79.3, 76.9, 79.1];

    var aTrain = [71.4, 71.2, 71.3, 71.2, 71.0, 71.2, 71.0, 71.1, 71.1, 71.2, 70.9, 70.6, 70.7, 71.2, 71.0, 71.3, 71.5, 71.4, 71.2, 71.0, 71.0, 71.2, 71.7, 72.2, 72.1, 72.4, 72.8, 72.5, 72.6, 73.2, 73.5, 73.3, 73.6, 73.2, 73.2, 74.2, 73.7, 73.2, 72.9, 72.8, 72.8, 72.7, 72.6, 73.1, 73.3, 73.0, 73.1, 72.7, 73.1, 73.3, 73.5, 73.8, 74.5, 74.7];

    var cTrain = [78.1, 77.7, 78.6, 78.8, 79.3, 78.7, 79.0, 78.7, 78.9, 78.7, 78.6, 78.8, 78.9, 79.7, 79.6, 79.6, 79.7, 80.6, 80.3, 80.4, 80.4, 80.6, 81.2, 81.7, 81.6, 81.4, 81.2, 81.4, 81.1, 80.9, 81.0, 80.9, 81.4, 81.0, 80.4, 80.6, 79.8, 79.4, 78.5, 77.9, 78.0, 78.3, 78.2, 78.6, 78.8, 79.6, 80.0, 80.0, 80.9, 81.3, 82.6, 84.5, 84.0, 83.8];

    var eTrain = [71.6, 71.1, 70.9, 70.9, 70.7, 71.4, 72.0, 72.3, 72.5, 73.9, 74.0, 74.0, 74.3, 74.7, 75.3, 75.6, 75.8, 75.9, 75.7, 75.8, 75.9, 75.7, 75.4, 75.9, 76.0, 75.8, 75.3, 75.4, 75.5, 75.6, 75.0, 73.8, 73.9, 73.4, 73.1, 72.4, 72.2, 72.2, 72.0, 72.8, 72.8, 72.7, 72.6, 73.3, 74.2, 75.5, 75.7, 75.7, 75.4, 75.6, 76.5, 76.4, 76.3, 76.1];

    var bTrain = [76.5, 76.8, 76.5, 76.4, 77.2, 77.4, 78.0, 78.0, 78.0, 78.1, 77.9, 78.1, 78.2, 78.0, 78.2, 78.2, 77.8, 77.5, 77.8, 77.6, 77.3, 77.2, 77.2, 78.1, 78.0, 78.0, 77.6, 77.9, 78.0, 78.4, 78.8, 78.7, 78.8, 78.9, 79.0, 78.6, 78.4, 78.6, 78.9, 79.0, 79.0, 78.7, 78.5, 79.1, 79.4, 79.4, 79.8, 79.6, 79.5, 79.2, 79.6, 79.3, 80.0, 80.5];

    var dTrain = [78.0, 77.9, 78.8, 79.0, 79.5, 80.1, 80.1, 80.6, 80.5, 80.5, 80.8, 80.6, 80.4, 80.6, 80.3, 80.4, 79.7, 79.3, 79.5, 79.0, 79.4, 79.5, 79.4, 79.6, 79.8, 79.8, 79.8, 79.7, 80.0, 80.4, 79.9, 79.4, 79.5, 79.2, 79.5, 79.1, 79.2, 79.2, 79.0, 79.0, 78.8, 78.3, 78.3, 78.2, 78.4, 78.8, 78.3, 78.5, 78.7, 78.5, 78.7, 78.6, 78.8, 79.3];

    var fTrain = [69.3, 68.8, 68.7, 68.8, 68.8, 69.4, 69.2, 69.1, 69.7, 70.0, 69.9, 70.1, 69.9, 70.4, 70.6, 70.5, 71.3, 71.6, 72.0, 72.3, 71.7, 72.0, 72.7, 73.1, 73.2, 72.6, 73.3, 73.7, 73.5, 73.7, 73.1, 73.6, 74.8, 74.1, 74.0, 73.4, 73.6, 74.6, 74.2, 73.9, 73.9, 73.8, 74.0, 73.2, 73.2, 73.7, 74.0, 75.0, 74.8, 74.2, 74.4, 74.4, 75.2, 75.2];

    var mTrain = [85.2, 85.7, 85.7, 85.8, 85.9, 86.1, 87.1, 87.9, 87.9, 87.2, 87.6, 87.7, 88.0, 87.8, 88.0, 87.5, 87.3, 87.8, 87.3, 86.6, 84.8, 84.1, 83.1, 82.9, 82.3, 82.1, 81.4, 80.9, 80.3, 80.0, 79.7, 78.6, 79.2, 78.9, 78.9, 78.6, 78.4, 78.1, 77.3, 77.6, 77.8, 77.6, 77.7, 77.8, 77.7, 78.1, 77.9, 77.7, 77.4, 77.5, 77.7, 77.8, 78.2, 78.3];

    var jTrain = [82.9, 83.5, 83.8, 84.1, 84.8, 84.8, 84.8, 85.0, 85.1, 85.6, 86.1, 86.0, 86.3, 86.1, 86.5, 86.1, 85.4, 85.5, 85.9, 85.7, 85.9, 85.7, 85.4, 85.4, 84.9, 84.1, 83.5, 83.6, 84.1, 84.1, 84.5, 84.2, 83.1, 82.6, 82.5, 82.2, 82.6, 82.8, 82.3, 82.8, 82.3, 82.0, 81.6, 81.7, 82.0, 82.4, 82.3, 82.6, 82.1, 82.4, 82.5, 82.2, 81.9, 82.1];

    var zTrain = jTrain;

    var gTrain = [79.5, 79.2, 79.8, 80.2, 79.9, 79.9, 79.7, 79.3, 79.8, 80.0, 80.2, 80.0, 80.7, 81.0, 81.4, 81.4, 82.0, 82.5, 83.0, 83.5, 83.2, 83.4, 83.9, 84.6, 84.1, 84.3, 83.5, 83.0, 82.7, 82.2, 81.6, 82.2, 82.3, 81.7, 81.4, 81.1, 81.8, 82.0, 82.5, 83.6, 83.4, 83.6, 83.7, 83.4, 83.6, 84.2, 83.1, 83.6, 83.5, 83.2, 83.5, 83.2, 84.0, 84.3];

    var lTrain = [75.1, 75.5, 75.8, 76.3, 76.6, 76.6, 77.1, 77.7, 78.0, 77.7, 78.4, 77.8, 77.9, 77.3, 76.9, 76.8, 76.6, 76.4, 76.5, 76.3, 75.8, 76.2, 75.8, 76.7, 77.0, 77.6, 78.8, 79.1, 79.6, 80.1, 80.4, 80.6, 80.1, 79.8, 80.0, 80.5, 79.5, 79.6, 79.0, 79.0, 79.4, 79.1, 78.8, 79.3, 80.0, 80.4, 80.3, 80.2, 81.3, 81.4, 81.5, 81.6, 82.2, 82.4];

    var s42Train = [77.1, 77.2, 77.5, 76.5, 76.6, 76.6, 76.7, 77.1, 77.3, 76.9, 76.5, 77.6, 77.8, 78.5, 78.5, 79.9, 80.3, 81.3, 82.2, 81.7, 81.6, 82.4, 81.9, 82.2, 82.1, 81.9, 82.3, 82.2, 82.5, 82.3, 82.7, 83.9, 83.8, 84.7, 83.9, 87.1, 88.4, 87.7, 89.2, null, null, null, null, null, null, null, null, null, 91.7, 89.2, 90.3, 94.2, 93.4, 93.7];

    var sFklnTrain = [97.9, 96.2, 96.5, 96.7, 96.8, 96.7, 97.0, 97.1, 97.2, 97.0, 96.9, 97.1, 97.1, 97.4, 97.4, 97.5, 97.6, 97.8, 97.8, 97.8, 97.9, 98.2, 98.4, 98.1, 98.1, 97.9, 97.9, 97.7, 97.6, 97.5, 97.3, 96.8, 96.8, 96.8, 96.3, 96.3, 96.4, 96.6, 96.5, 96.4, 96.0, 96.0, 96.0, 96.3, 96.1, 96.1, 96.2, 96.5, 96.3, 95.9, 96.1, 96.6, 97.2, 96.9];

    var sRockTrain = [90.1, 91.5, 91.3, 91.5, 91.9, 92.2, 92.4, 92.7, 92.6, 92.6, 92.4, 92.5, 92.6, 92.8, 93.1, 93.2, 92.7, 92.5, 92.6, 92.3, 92.4, 92.5, 93.0, 92.7, 92.9, 92.7, 92.8, 92.9, 93.5, 93.6, 93.6, 93.3, 93.5, 93.4, 93.0, 93.0, 93.2, 93.0, 93.0, 93.1, 92.9, 93.0, 92.8, 92.8, 93.3, 93.1, 93.1, 94.1, 94.5, 95.1, 95.6, 96.1, 96.9, 96.9];

    var allTrains = [75.5, 75.7, 76.0, 76.2, 76.5, 76.7, 77.1, 77.4, 77.7, 77.9, 78.1, 78.1, 78.2, 78.4, 78.5, 78.6, 78.7, 78.8, 79.2, 79.1, 78.9, 78.6, 79.1, 77.9, 78.0, 78.8, 78.9, 78.9, 78.6, 78.8, 78.9, 79.1, 79.0, 78.8, 79.1, 78.8, 78.8, 79.1, 79.3, 78.9, 79.3, 79.2, 79.2, 79.3, 79.5, 79.5, 79.6, 79.0, 79.6, 79.3, 79.9, 80.1, 79.9, 80.3];

    var dates = ["Jan 2009", "Feb 2009", "Mar 2009", "Apr 2009", "May 2009", "June 2009", "July 2009", "Aug 2009", "Sept 2009", "Oct 2009", "Nov 2009", "Dec 2009", "Jan 2010", "Feb 2010", "Mar 2010", "Apr 2010", "May 2010", "June 2010", "July 2010", "Aug 2010", "Sept 2010", "Oct 2010", "Nov 2010", "Dec 2010", "Jan 2011", "Feb 2011", "Mar 2011", "Apr 2011", "May 2011", "June 2011", "July 2011", "Aug 2011", "Sept 2011", "Oct 2011", "Nov 2011", "Dec 2011", "Jan 2012", "Feb 2012", "Mar 2012", "Apr 2012", "May 2012", "June 2012", "July 2012", "Aug 2012", "Sept 2012", "Oct 2012", "Nov 2012", "Dec 2012", "Jan 2013", "Feb 2013", "Mar 2013", "Apr 2013", "May 2013", "June 2013", "Aug 2013", "Sept 2013"]

    // Sets 7 train as default
    dataset = sevenTrain;

    // These set the scales
    var xScale = d3.scale
      .linear()
      .domain([0, 55])
      .range([padding, w - padding]);

    // This scales with 70 to 100
    var yScale = d3.scale.linear()
      .domain([65, 100])
      .range([h - padding, padding]);

    // This scales with min and max
    // var yScale = d3.scale.linear()
    //   .domain([d3.min(dataset, function(d,i) {
    //     return d;
    //   }), d3.max(dataset, function(d,i) {
    //     return d;
    //   })])
    //   .range([h - padding, padding]);

    // These set the axes
    var xAxis = d3.svg.axis()
      .scale(xScale)
      .tickFormat(function(d, i) {
        return dates[d]
      })
      .orient('bottom');

    // Might return to this later
    // var formatAsPercentage = d3.format("1%");

    var yAxis = d3.svg.axis()
      .scale(yScale)
      .orient('left');

    // This concerns point overflow
    svg.append("clipPath")
      .attr("id", "chart-area")
      .append("rect")
      .attr("x", padding)
      .attr("y", padding)
      .attr("width", w - padding * 2)
      .attr("height", h - padding * 2);

    // This appends the points
    var circles = svg.append('g')
      .attr('id', 'circles')
      .attr("clip-path", "url(#chart-area)")
      .selectAll("circle")
      .data(dataset)
      .enter()
      .append("circle")
      .attr('class', 'bar')
      .style("height", function(d) {
        var pointHeight = d * 5;
        return pointHeight + "px";
      })
      .attr("cx", function(d, i) {
        return xScale(i);
      })
      .attr("cy", function(d) {
        return yScale(d);
      })
      .attr("r", 5)
      .attr('fill', '#B933AD')
      .on("mouseover", function(d, i) {
        d3.select(this)
          .attr("r", 10);

          //Get this circles's x/y values, then augment for the tooltip
          var xPosition = parseFloat(d3.select(this).attr("cx"))// + xScale.rangeBand() / 2;
          var yPosition = parseFloat(d3.select(this).attr("cy")) - 75/// 20 + h / 2;
          //Update the tooltip position and value
          d3.select("#tooltip")
            .style("left", xPosition + "px")
            .style("top", yPosition + "px")
            .select("#index")
            .text(dates[i]);
          d3.select("#tooltip")
            .select("#value")
            .text(d);

          //Show the tooltip
          d3.select("#tooltip").classed("hidden", false);
      })
      .on("mouseout", function(d) {
        d3.select(this)
          .transition()
          .duration(250)
          .attr('r', 5);
        d3.select("#tooltip").classed("hidden", true);
      });

    // This labels each point with its value
    // svg.selectAll("text")
    //   .data(dataset)
    //   .enter()
    //   .append("text")
    //   .text(function(d) {
    //     return d;
    //   })
    //   .attr("x", function(d, i) {
    //     return xScale(i);
    //   })
    //   .attr('y', function(d, i) {
    //     return yScale(d);
    //   })
    //   .attr("font-family", "sans-serif")
    //   .attr("font-size", "5px")
    //   .attr("fill", "white");

    // These append the axes
    svg.append('g')
      .attr("class", "axis")
      .attr("transform", "translate(0," + (h - padding) + ")")
      .call(xAxis)
     .append("text")
      .attr("class", "label")
      .attr("x", w - 40)
      .attr("y", -6)
      .style('font-size', 20)
      .style("text-anchor", "end")
      .text("Date");

    svg.append('g')
      .attr("class", 'axis')
      .attr('transform', 'translate(' + padding + ", 0)")
      .call(yAxis)
     .append("text")
      .attr("class", "label")
     // .attr("transform", "rotate(-90)")
      .attr("y", 40)
      .attr("x", 220)
      .attr("dy", "1em")
      .style('font-size', 20)
      .style("text-anchor", "end")
      .text("Wait Assessment (%) *");

    // When you click a button it changes to that train's data

    d3.select("#n")
      .on('click', function() {
        newPlot(nTrain, '#FCCC0A');
      });

    d3.select("#q")
      .on("click", function() {
        newPlot(qTrain, '#FCCC0A');
      });

    d3.select("#r")
      .on("click", function() {
        newPlot(rTrain, '#FCCC0A');
      });
      // This is for some hover stuff

      // $('.line-buttons').css('opacity', .5);
      // $(this).css('opacity', 1);
      // $('.line-buttons').on('mouseover', function(){
      //   $(this).css('opacity', 1);
      // });
      // $('.line-buttons').on('mouseout', function(){
      //   if ($(this).attr('id') != 'q') {
      //     $(this).css('opacity', .5);
      //   }
      // });

    d3.select("#seven")
      .on("click", function() {
        newPlot(sevenTrain, '#B933AD');
      });

    d3.select("#one")
      .on("click", function() {
          newPlot(oneTrain, '#EE352E');
      });

    d3.select("#two")
      .on("click", function() {
        newPlot(twoTrain, '#EE352E');
      });

    d3.select("#three")
      .on("click", function() {
        newPlot(threeTrain, '#EE352E');
      });

    d3.select("#four")
      .on("click", function() {
        newPlot(fourTrain, '#00933C');
      });

    d3.select("#five")
      .on("click", function() {
        newPlot(fiveTrain, '#00933C');
      });

    d3.select("#six")
      .on("click", function() {
        newPlot(sixTrain, '#00933C');
      });

    d3.select("#a")
      .on("click", function() {
        newPlot(aTrain, '#2850AD');
      });

    d3.select("#c")
      .on("click", function() {
        newPlot(cTrain, '#2850AD');
      });

    d3.select("#e")
      .on("click", function() {
        newPlot(eTrain, '#2850AD');
      });

    d3.select("#b")
      .on("click", function() {
        newPlot(bTrain, '#FF6319');
      });

    d3.select("#d")
      .on("click", function() {
        newPlot(dTrain, '#FF6319');
      });

    d3.select("#f")
      .on("click", function() {
        newPlot(fTrain, '#FF6319');
      });

    d3.select("#m")
      .on("click", function() {
        newPlot(mTrain, '#FF6319');
      });

    d3.select("#j")
      .on("click", function() {
        newPlot(jTrain, '#996633');
      });

    d3.select("#z")
      .on("click", function() {
        newPlot(zTrain, '#996633');
      });

    d3.select("#g")
      .on("click", function() {
        newPlot(gTrain, '#6CBE45');
      });

    d3.select("#l")
      .on("click", function() {
        newPlot(lTrain, '#A7A9AC');
      });

    d3.select("#s42")
      .on("click", function() {
        newPlot(s42Train, '#808183');
      });

    d3.select("#sFkln")
      .on("click", function() {
        newPlot(sFklnTrain, '#808183');
      });

    d3.select("#sRock")
      .on("click", function() {
        newPlot(sRockTrain, '#808183');
      });

    var newPlot = function(dataInput, fillColor){
      dataset = dataInput

      svg.selectAll("circle")
        .data(dataset)
        .transition()
        .ease('linear')
        .delay(function(d, i) {
          return i * 10;
        })
        .attr('cx', function(d, i) {
          return xScale(i);
        })
        .attr('cy', function(d) {
          return yScale(d);
        })
        .attr('fill', fillColor)
    }

  </script>