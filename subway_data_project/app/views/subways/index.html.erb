  <div class="top">
    <h1>New York City Subway Investigation</h1>
  </div>
  <div class="buttons">
    <div id="seven">7</div>
    <div id="q">Q</div>
    <div id="one">1</div>
  </div>
  <div class="svg-chart">
  </div>
  <script type="text/javascript">

    //Width and height
    var w = 500;
    var h = 300;
    var padding = 40;

    // Appends svg element
    var svg = d3.select(".svg-chart")
          .append("svg")
          .attr("width", w)
          .attr("height", h)
          .attr("preserveAspectRatio", "xMidYMin");

    // Here are some datasets
    var dataset = [];

    var qTrain = [81.8, 82.3, 82.2, 82.5, 83, 82.8, 83.1, 83, 82.9, 82.9, 83.3, 82.8, 82.8, 82.2, 82.2, 82.1, 81.6, 81.6, 81.4, 81, 80.1, 79.6, 79, 79.1, 78.8, 78.6, 78.3, 77.9, 77.9, 77.6, 77.9, 79, 78.7, 78.5, 79.1, 78.8, 78.3, 78.4, 78.6, 79, 79.3, 79.5, 79.6, 79.1, 79.3, 79.8, 80, 80.1, 80.2, 80.3, 80.6, 80.3, 79.8, 79.4];

    var sevenTrain = [74.5, 74.4, 74.4, 74.3, 74.8, 74.9, 74.9, 76.1, 75.8, 75.8, 76.1, 76.1, 76.1, 76.2, 75.7, 75.6, 75.4, 74.6, 74.4, 74.2, 74.1, 74.1, 74.2, 74.1, 74.3, 74.4, 74.7, 75, 74.9, 75.9, 76.2, 76.2, 76, 76.3, 76, 76.8, 75.8, 76.1, 76.1, 76.3, 76.5, 76.5, 76.3, 76.6, 77.4, 78, 78.3, 77.7, 79.3, 79.2, 79.4, 79.2, 78.8, 79.2];

    var oneTrain = [73.1, 73.1, 73, 73.9, 74.1, 74.2, 74.4, 75.2, 75.6, 75.5, 76, 76.3, 76.5, 77.1, 77.1, 76.9, 76.9, 77.3, 75.3, 75.6, 74.6, 75, 73.9, 70.2, 75.9, 77.3, 78.3, 78.6, 78.1, 77.4, 77.3, 79.5, 77.6, 79.8, 79.6, 79.3, 78.9, 80.2, 80.6, 79.1, 84.4, 83.6, 83.8, 86.1, 85.4, 84.9, 82.1, 82.7, 83.9, 81.9, 81.8, 83, 82.9, 83.3];

    // Sets 7 train as default
    dataset = sevenTrain;

    // These set the scales
    var xScale = d3.scale.linear()
      .domain([0, d3.max(dataset, function(d,i) {
        // return i;
        // returning 55 here (max is 54)
        return 55;
      })])
      .range([padding, w - padding]);

    // This scales with 70 to 100
    var yScale = d3.scale.linear()
      .domain([70, 100])
      .range([h - padding, padding]);

    // This scales with min and max
    // var yScale = d3.scale.linear()
    //   .domain([d3.min(dataset, function(d,i) {
    //     return d;
    //   }), d3.max(dataset, function(d,i) {
    //     return d;
    //   })])
    //   .range([h - padding, padding]);

    // These set the axes
    var xAxis = d3.svg.axis()
      .scale(xScale)
      .orient('bottom');

    // Might return to this later
    // var formatAsPercentage = d3.format("1%");

    var yAxis = d3.svg.axis()
      .scale(yScale)
      .orient('left');

    svg.append("clipPath")
      .attr("id", "chart-area")
      .append("rect")
      .attr("x", padding)
      .attr("y", padding)
      .attr("width", w - padding * 2)
      .attr("height", h - padding * 2);

    // This appends the points
    var circles = svg.append('g')
      .attr('id', 'circles')
      .attr("clip-path", "url(#chart-area)")
      .selectAll("circle")
      .data(dataset)
      .enter()
      .append("circle")
      .attr('class', 'bar')
      .style("height", function(d) {
        var pointHeight = d * 5;
        return pointHeight + "px";
      });

    circles.attr("cx", function(d, i) {
      return xScale(i);
    })
    .attr("cy", function(d) {
      return yScale(d);
    })
    .attr("r", function(d) {
      return 3;
    })
    .attr('fill', '#B933AD');

    // This labels each point with its value
    // svg.selectAll("text")
    //   .data(dataset)
    //   .enter()
    //   .append("text")
    //   .text(function(d) {
    //     return d;
    //   })
    //   .attr("x", function(d, i) {
    //     return xScale(i);
    //   })
    //   .attr('y', function(d, i) {
    //     return yScale(d);
    //   })
    //   .attr("font-family", "sans-serif")
    //   .attr("font-size", "5px")
    //   .attr("fill", "white");

    // These append the axes
    svg.append('g')
      .attr("class", "axis")
      .attr("transform", "translate(0," + (h - padding) + ")")
      .call(xAxis);

    svg.append('g')
      .attr("class", 'axis')
      .attr('transform', 'translate(' + padding + ", 0)")
      .call(yAxis);

    // When you click the Q it changes to the Q data
    d3.select("#q")
      .on("click", function() {

      dataset = qTrain;

      svg.selectAll("circle")
        .data(dataset)
        .transition()
        .ease('linear')
        .delay(function(d, i) {
          return i * 10;
        })
        .attr("cx", function(d, i) {
          return xScale(i);
        })
        .attr("cy", function(d) {
          return yScale(d);
        })
        .attr('fill', '#FCCC0A')
      });

    d3.select("#seven")
      .on("click", function() {

      dataset = sevenTrain;

      svg.selectAll("circle")
        .data(dataset)
        .transition()
        .ease('linear')
        .delay(function(d, i) {
          return i * 10;
        })
        .attr("cx", function(d, i) {
          return xScale(i);
        })
        .attr("cy", function(d) {
          return yScale(d);
        })
        .attr('fill', '#B933AD')
      });

    d3.select("#one")
      .on("click", function() {

      dataset = oneTrain;

      svg.selectAll("circle")
        .data(dataset)
        .transition()
        .ease('linear')
        .delay(function(d, i) {
          return i * 10;
        })
        .attr("cx", function(d, i) {
          return xScale(i);
        })
        .attr("cy", function(d) {
          return yScale(d);
        })
        .attr('fill', '#EE352E')
      });

  </script>